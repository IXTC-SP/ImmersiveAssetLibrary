<%- include('../partials/header') %>

<link rel="stylesheet" href="../modellist.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pannellum@2.5.6/build/pannellum.css" />

<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/pannellum@2.5.6/build/pannellum.js"></script>
<script type="text/javascript" src="/datamuse.js"></script>

<style>
  #panorama {
    width: 600px;
    height: 400px;
  }
</style>


<%- include('../partials/edit-properties') %>
<script>
  var files = [];
  var newfiles = [];
  var type = '';
  getEJScontent();

  function getEJScontent(){
  <% if (format) {  %>
    type = <%- JSON.stringify(format)%>;
  <% } else { %>
  console.log("does not exist");
  <% } %>

  if(type == 'cubemap'){
    files.push(<%- JSON.stringify(images.front)%>);
    files.push(<%- JSON.stringify(images.right)%>);
    files.push(<%- JSON.stringify(images.back)%>);
    files.push(<%- JSON.stringify(images.left)%>);
    files.push(<%- JSON.stringify(images.top)%>);
    files.push(<%- JSON.stringify(images.bottom)%>);
  } else {
    files.push(<%- JSON.stringify(images.equi)%>);
  }
  runPannellum(type)
  }

  function getTextureFromFilesArray(typename){
    var result ="";
    for(i=0;i<files.length;i++){
      if(files[i].split("_")[0] == typename){
        result = files[i];
      }
    }
    return result;
  }


  function runPannellum(type) {
    console.log(files);
    if(type == 'cubemap'){
      pannellum.viewer('panorama', {
        "type": "cubemap",
        "cubeMap": [
          "../uploads/tmp/" + files[0],
          "../uploads/tmp/" + files[1],
          "../uploads/tmp/" + files[2],
          "../uploads/tmp/" + files[3],
          "../uploads/tmp/" + files[4],
          "../uploads/tmp/" + files[5]
        ],
        "autoLoad": true
      });
    } else {
      pannellum.viewer('panorama', {
      "type": "equirectangular",
      "panorama": "../uploads/tmp/" + files[0],
      "autoLoad": true
      });
    }
    // https://naver.github.io/egjs-view360/examples/img/equi.jpg
  }

  async function createUploadContent() {
    const formData = new FormData();
    const request = new XMLHttpRequest();
    var nextURL = "/view-360";
    var postURL = "/savethreesixty";
    console.log("create upload content");

    var data = {
      files : [],
      title : document.querySelector(".title-info").value,
      description : document.querySelector(".desc-info").value,
      tags : []
      }
      var tags = document.querySelectorAll("#selected_tag_element");
      for(i = 0; i<tags.length;i++){ data.tags.push(tags[i].innerText); }
      data.files=files;
      console.log(data);
      for(i=0; i< newfiles.length;i++)
      { formData.append('file', newfiles[i]); }
      formData.append('data', JSON.stringify(data));


      request.onreadystatechange = function() { // listen for state changes
      if (request.readyState == 4 && request.status == 200) { // when completed we can move away
      window.location = nextURL;
      }
      }
      request.open("POST", postURL, false);
      request.send(formData);
  }

  function addNewFile(el){
  console.log(el.files[0].name);
  newfiles.push(el.files[0]);
  let p = document.querySelector('.all-files')
  console.log(p);
  let main = document.createElement('div');
  main.classList.add("new-file");
  p.appendChild(main);
  let btn = document.createElement('button');
  btn.innerHTML = "X";
  let tag = document.createElement("span");
  tag.innerHTML = el.files[0].name;
  main.appendChild(btn);
  main.appendChild(tag);
  btn.onclick = function(){
  removeNewFile(main,el.files[0]);
  }
  }

  var suggestedtagelements = [];
  var selectedtagelements = [];

  const node = document.getElementById("tag_create");
  node.addEventListener("keyup", function(event) {
    if (event.key === "Enter") {
      // Do work
      if (selectedtagelements.includes(node.value)) return;
      addTag(node.value);
      createTagSuggestion(node.value);
      node.value = "";

    }
  });

  function clearsuggestedtagelements() {
    if (suggestedtagelements.length === 0) return;
    suggestedtagelements.forEach(e => {
      e.remove();
    })
  }

  function createTagSuggestion(tagname) {
    clearsuggestedtagelements();
    suggestionsFromDatamuse(tagname).then(result => {
      result.forEach(a => {
        createSuggestElement(a.word);
      });
    });
  }

  function createSuggestElement(tagname) {
    let col = document.createElement('div');
    col.classList.add('col-auto');
    document.getElementById('tag_suggest').appendChild(col);
    let tag = document.createElement("p");
    tag.innerHTML = tagname;
    col.appendChild(tag);
    tag.classList.add('tag_element');
    tag.onclick = function() {
      if (selectedtagelements.includes(tagname)) return;
      addTag(tagname);
      createTagSuggestion(tagname);
    };

    //add to suggested tag element array
    suggestedtagelements.push(col);
  }

  function addTag(tagname) {
    //get paragraph child from group
    var paragraph = document.getElementById('selected_tags_group');
    //create span element with id of selected_tag_element
    var tag = document.createElement('span');
    tag.innerText = " " + tagname;
    tag.setAttribute("id", "selected_tag_element");
    tag.onclick = function() {
      paragraph.removeChild(tag);
      selectedtagelements = selectedtagelements.filter(e => e !== tagname);
    };
    paragraph.appendChild(tag);
    let taginput = document.getElementById("tag_input_content");
    taginput.value = selectedtagelements.toString();
    selectedtagelements.push(tagname);
  }
</script>


<%- include('../partials/footer') %>
